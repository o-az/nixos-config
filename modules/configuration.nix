{
  modulesPath,
  # ghostty,
  pkgs,
  lib,
  ...
}:

with lib;

{
  imports = [
    # Include the default lxd configuration.
    "${modulesPath}/virtualisation/lxc-container.nix"
    # Include the container-specific autogenerated configuration.
    ./lxd.nix
    # Include the container-specific autogenerated configuration.
    ./orbstack.nix
  ];

  time.timeZone = "America/Los_Angeles";

  networking = {
    useDHCP = false;
    dhcpcd.enable = false;
    useHostResolvConf = false;
  };

  systemd.network = {
    enable = true;
    networks."50-eth0" = {
      matchConfig.Name = "eth0";
      networkConfig = {
        DHCP = "ipv4";
        IPv6AcceptRA = true;
      };
      linkConfig.RequiredForOnline = "routable";
    };
  };

  virtualisation = {
    docker = {
      enable = true;
    };
  };

  environment = {
    systemPackages =
      with pkgs;
      with pkgs.nodePackages_latest;
      [
        # ghostty.packages.x86_64-linux.default
        duf
        tldr
        glances
        fd
        fx
        jq
        yq
        gh
        niv
        git
        oha
        gcc
        dig
        age
        dura
        jrnl
        jump
        curl
        kmon
        nixd
        just
        nurl
        walk
        btop
        wget
        xplr
        delta
        ngrok
        atuin
        unzip
        jless
        trippy
        direnv
        kalker
        poppler
        grpcurl
        gh-dash
        ripgrep
        termscp
        termshot
        gnumake
        hadolint
        killall
        git-lfs
        lazygit
        zathura
        ast-grep
        nix-tree
        tailspin
        nix-diff
        starship
        nix-init
        localsend
        lazydocker
        superfile
        fastfetch
        bandwhich
        nix-update
        ripgrep-all
        openapi-tui
        diff-so-fancy
        coreutils-full
        nil
        biome
        taplo
        serve
        gopls
        cspell
        fnlfmt
        statix
        devenv
        deadnix
        gotools
        bore-cli
        proselint
        cloudflared
        nixpkgs-fmt
        openscad-lsp
        nixfmt-rfc-style
        nodePackages_latest.sass
        vscode-json-languageserver
        sumneko-lua-language-server
        vscode-langservers-extracted
        nodePackages_latest.typescript
        nodePackages.bash-language-server
      ];

    variables = {
      EDITOR = "hx";
      XDG_CONFIG_HOME = "$HOME/.config";
    };

    shells = with pkgs; [ fish ];
    shellAliases = { };
  };

  users = {
    defaultUserShell = pkgs.fish;
  };

  programs = {
    fish = {
      enable = true;
    };
  };

  # Extra certificates from OrbStack.
  security.pki.certificates = [
    ''
      -----BEGIN CERTIFICATE-----
      MIICDTCCAbKgAwIBAgIQeXEwUyJzN/MdRJ79MY2AWjAKBggqhkjOPQQDAjBmMR0w
      GwYDVQQKExRPcmJTdGFjayBEZXZlbG9wbWVudDEeMBwGA1UECwwVQ29udGFpbmVy
      cyAmIFNlcnZpY2VzMSUwIwYDVQQDExxPcmJTdGFjayBEZXZlbG9wbWVudCBSb290
      IENBMB4XDTI0MDEwNTE0NDM1MVoXDTM0MDEwNTE0NDM1MVowZjEdMBsGA1UEChMU
      T3JiU3RhY2sgRGV2ZWxvcG1lbnQxHjAcBgNVBAsMFUNvbnRhaW5lcnMgJiBTZXJ2
      aWNlczElMCMGA1UEAxMcT3JiU3RhY2sgRGV2ZWxvcG1lbnQgUm9vdCBDQTBZMBMG
      ByqGSM49AgEGCCqGSM49AwEHA0IABMxlU8hGEWQyJDkneQV5nBz/r+wzL9UYPlAf
      aupq8k/hiW4/nhCM43vNOWmyE9+sw5WYac0hvqc0jdDOs14Xv42jQjBAMA4GA1Ud
      DwEB/wQEAwIBBjAPBgNVHRMBAf8EBTADAQH/MB0GA1UdDgQWBBRIsbuHjpBAlM3G
      wfV/wAKGrjGYATAKBggqhkjOPQQDAgNJADBGAiEA2FD1EdejrBM3HOWXDh5/Lfnd
      z4lVIAB21rrZg+/g2ZACIQCEAnVD2LNnJr2sZLcvfbaaOH3DQRwWbchuyPVrAZ+W
      AQ==
      -----END CERTIFICATE-----

    ''
  ];

  # This value determines the NixOS release from which the default
  # settings for stateful data, like file locations and database versions
  # on your system were taken. Itâ€˜s perfectly fine and recommended to leave
  # this value at the release version of the first install of this system.
  # Before changing this value read the documentation for this option
  # (e.g. man configuration.nix or on https://nixos.org/nixos/options.html).
  system.stateVersion = "21.05"; # Did you read the comment?

  environment.noXlibs = false;
}
