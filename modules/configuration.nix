{ modulesPath, pkgs, pkgs-unstable, lib, ... }:

with lib;

{
  imports = [
    # Include the default lxd configuration.
    "${modulesPath}/virtualisation/lxc-container.nix"
    # Include the container-specific autogenerated configuration.
    ./orbstack.nix
  ];

  networking = {
    hostName = "nixos";
    useDHCP = true;
    interfaces.eth0.useDHCP = true;
  };

  virtualisation = { docker = { enable = true; }; };

  environment = {
    systemPackages = with pkgs;
      [
        fd
        jq
        bat
        eza
        fzf
        git
        nil
        mods
        jump
        curl
        nurl
        unzip
        zellij
        nixfmt
        direnv
        bottom
        gnumake
        ripgrep
        killall
        git-lfs
        lazygit
        deadnix
        starship
        diff-so-fancy
        coreutils-full
      ] ++ (with pkgs-unstable; [
        gh
        niv
        pipx
        atuin
        helix
        neovim
        statix
        nix-tree
        nix-diff
        nix-init
        nodejs_21
        nix-update
      ]);

    variables = {
      EDITOR = "code";
      XDG_CONFIG_HOME = "$HOME/.config";
    };

    shells = with pkgs; [ fish ];
    shellAliases = { };
  };

  users = { defaultUserShell = pkgs.fish; };

  programs = { fish = { enable = true; }; };

  # This value determines the NixOS release from which the default
  # settings for stateful data, like file locations and database versions
  # on your system were taken. Itâ€˜s perfectly fine and recommended to leave
  # this value at the release version of the first install of this system.
  # Before changing this value read the documentation for this option
  # (e.g. man configuration.nix or on https://nixos.org/nixos/options.html).
  system.stateVersion = "21.05"; # Did you read the comment?

  # As this is intended as a stadalone image, undo some of the minimal profile stuff
  documentation = {
    enable = true;
    man.enable = true;
    dev.enable = false;
    doc.enable = false;
    info.enable = false;
    nixos.enable = true;
  };
  environment.noXlibs = false;
}
